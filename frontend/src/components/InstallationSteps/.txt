// ✅ Step2.jsx — Server Token Generation
import React from "react";
import { Copy, Wifi } from "lucide-react";

const Step2 = ({
  serverToken,
  serverConnectionStatus,
  handleGenerateServerToken,
  handleCheckConnection,
  translations,
  onNext,
  onBack,
}) => {
  const handleCopy = () => {
    navigator.clipboard.writeText(serverToken);
  };

  const handleNextClick = () => {
    if (!serverConnectionStatus || serverConnectionStatus.includes("failed")) {
      alert(translations.checkConnectionFirst);
      return;
    }
    onNext();
  };

  return (
    <div className="p-6 rounded-md max-w-3xl mx-auto bg-white">
      <h2 className="text-xl font-semibold mb-6">
        {translations.step2Title || "Server Token Generation"}
      </h2>

      <div className="space-y-4">
        <button
          onClick={handleGenerateServerToken}
          className="bg-blue-600 text-white px-4 py-2 rounded flex items-center">
          <Wifi className="mr-2" />
          {translations.generateTokenButton || "Generate Token"}
        </button>

        {serverToken && (
          <div className="border p-4 rounded bg-gray-50">
            <p className="font-mono break-all">{serverToken}</p>
            <button
              onClick={handleCopy}
              className="mt-2 inline-flex items-center text-sm text-blue-600 hover:underline">
              <Copy size={16} className="mr-1" />
              {translations.copyToClipboardButton || "Copy to Clipboard"}
            </button>
          </div>
        )}

        {serverToken && (
          <button
            onClick={handleCheckConnection}
            className="bg-green-600 text-white px-4 py-2 rounded">
            {translations.checkConnectionButton || "Check Connection"}
          </button>
        )}

        {serverConnectionStatus && (
          <p
            className={`mt-2 text-sm font-semibold ${
              serverConnectionStatus.includes("success")
                ? "text-green-600"
                : "text-red-600"
            }`}>
            {serverConnectionStatus}
          </p>
        )}
      </div>

      <div className="flex justify-between mt-8">
        <button
          onClick={onBack}
          className="bg-gray-400 text-white px-4 py-2 rounded">
          {translations.previousButton || "Previous"}
        </button>
        <button
          onClick={handleNextClick}
          className="bg-green-600 text-white px-4 py-2 rounded">
          {translations.nextButton || "Next"}
        </button>
      </div>
    </div>
  );
};

export default Step2;
